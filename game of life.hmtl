<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Text to Grid Conversion - Pattern Mapping</title>
    <style>
        .cell {
            width: 10px;
            height: 10px;
            display: inline-block;
            border: 1px solid black;
            margin: -1px 0 0 -1px;
        }
        .alive {
            background-color: black;
        }
    </style>
</head>
<body>
<div id="grid"></div>
<script>
    const patterns = {
        'H': [
            [1, 0, 1],
            [1, 1, 1],
            [1, 0, 1]
        ],
        'E': [
            [1, 1, 1],
            [1, 1, 0],
            [1, 1, 1]
        ],
        'L': [
            [1, 0, 0],
            [1, 0, 0],
            [1, 1, 1]
        ],
        'O': [
            [0, 1, 0],
            [1, 0, 1],
            [0, 1, 0]
        ]
    };

    const text = "HELLO";
    const gridContainer = document.getElementById('grid');

    function createGridFromText(text) {
        for (let char of text) {
            const pattern = patterns[char];
            const rowContainer = document.createElement('div');
            for (let row of pattern) {
                const rowElement = document.createElement('div');
                for (let cell of row) {
                    const cellElement = document.createElement('div');
                    cellElement.className = 'cell';
                    if (cell === 1) {
                        cellElement.classList.add('alive');
                    }
                    rowElement.appendChild(cellElement);
                }
                rowContainer.appendChild(rowElement);
            }
            gridContainer.appendChild(rowContainer);
        }
    }

    createGridFromText(text);
</script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Text to Game of Life Grid</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f4f4f4;
            font-family: Arial, sans-serif;
        }
        #gridContainer {
            display: grid;
            grid-template-columns: repeat(5, 20px); /* Adjust based on the maximum width of your patterns */
            gap: 1px;
        }
        .cell {
            width: 20px;
            height: 20px;
            background-color: #fff;
            border: 1px solid #ccc;
        }
        .alive {
            background-color: #333;
        }
    </style>
</head>
<body>
<div id="gridContainer"></div>
<script>
    const patterns = {
        'H': [
            [1, 0, 1],
            [1, 1, 1],
            [1, 0, 1]
        ],
        'E': [
            [1, 1, 1],
            [1, 1, 0],
            [1, 1, 1]
        ],
        'L': [
            [1, 0, 0],
            [1, 0, 0],
            [1, 1, 1]
        ],
        'O': [
            [0, 1, 0],
            [1, 0, 1],
            [0, 1, 0]
        ]
    };

    const text = "HELLO";
    const gridContainer = document.getElementById('gridContainer');

    function createGridFromText(text) {
        gridContainer.innerHTML = ''; // Clear previous content
        for (let i = 0; i < text.length; i++) {
            const char = text[i];
            const pattern = patterns[char];
            for (let row of pattern) {
                const rowElement = document.createElement('div');
                rowElement.style.display = 'flex';
                for (let cell of row) {
                    const cellElement = document.createElement('div');
                    cellElement.className = 'cell';
                    if (cell === 1) {
                        cellElement.classList.add('alive');
                    }
                    rowElement.appendChild(cellElement);
                }
                gridContainer.appendChild(rowElement);
            }
            // Add a separator between characters
            if (i < text.length - 1) {
                const spacer = document.createElement('div');
                spacer.style.width = '20px';
                gridContainer.appendChild(spacer);
            }
        }
    }

    createGridFromText(text);
</script>
</body>
</html>
